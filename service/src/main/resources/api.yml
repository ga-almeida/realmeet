openapi: 3.0.0
info:
  version: 1.0.0
  title: realmeet
servers:
  - url: 'http://localhost:8080'
paths:
  /rooms/{id}:
    get:
      summary: 'Return a room by ID'
      operationId: find
      tags:
        - room
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the room
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomDTO'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

    put:
      summary: 'Update a room by ID'
      operationId: update
      tags:
        - room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoomDTO'
        required: true
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the room
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: Updated success
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        422:
          $ref: '#/components/responses/UnprocessableEntity'

    delete:
      summary: 'Delete a room by ID'
      operationId: delete
      tags:
        - room
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the room
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: Delete success
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /rooms:
    post:
      summary: 'Create a room'
      operationId: create
      tags:
        - room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoomDTO'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomDTO'
        422:
          $ref: '#/components/responses/UnprocessableEntity'

  /allocations:
    get:
      summary: 'List allocations'
      operationId: listAllocation
      tags:
        - allocation
      parameters:
        - name: employeeEmail
          in: query
          description: Email of the employee
          schema:
            type: string
        - name: roomId
          in: query
          description: Room ID
          schema:
            type: integer
            format: int64
        - name: startAt
          in: query
          description: Allocation start time
          schema:
            type: string
            format: date
        - name: endAt
          in: query
          description: Allocation end time
          schema:
            type: string
            format: date
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AllocationDTO'

    post:
      summary: 'Create an allocation'
      operationId: createAllocation
      tags:
        - allocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAllocationDTO'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationDTO'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        422:
          $ref: '#/components/responses/UnprocessableEntity'

  /allocations/{id}:
    delete:
      summary: 'Delete a allocation by ID'
      operationId: deleteAllocation
      tags:
        - allocation
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the allocation
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: Delete success
        400:
          description: Bad Parameter
        404:
          description: Not Found

    put:
      summary: 'Update a allocation by ID'
      operationId: updateAllocation
      tags:
        - allocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAllocationDTO'
        required: true
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the allocation
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: Updated success
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        422:
          $ref: '#/components/responses/UnprocessableEntity'

components:
  schemas:
    RoomDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateRoomDTO'
        - type: object
          properties:
            id:
              type: integer
              format: int64

    CreateRoomDTO:
      type: object
      properties:
        name:
          type: string
        seats:
          type: integer

    UpdateRoomDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateRoomDTO'

    CreateAllocationDTO:
      type: object
      properties:
        subject:
          type: string
        startAt:
          type: string
          format: date-time
        endAt:
          type: string
          format: date-time
        roomId:
          type: integer
          format: int64
        employeeName:
          type: string
        employeeEmail:
          type: string

    UpdateAllocationDTO:
      type: object
      properties:
        subject:
          type: string
        startAt:
          type: string
          format: date-time
        endAt:
          type: string
          format: date-time

    AllocationDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        subject:
          type: string
        startAt:
          type: string
          format: date-time
        endAt:
          type: string
          format: date-time
        roomId:
          type: integer
          format: int64
        employeeName:
          type: string
        employeeEmail:
          type: string

    ResponseErrorItems:
      type: object
      required:
        - field
        - errorCode
      properties:
        field:
          type: string
        errorCode:
          type: string

    ResponseError:
      type: object
      required:
        - message
        - errorCode
      properties:
        message:
          type: string
        errorCode:
          type: string

  responses:
    UnprocessableEntity:
      description: The server understands the content type of the request entity but was unable to process the contained instructions.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResponseErrorItems'